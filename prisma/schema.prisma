generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  username  String
  password  String
  polls     Poll[]
  sessions  Session[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Poll {
  id                 String               @id @unique @default(cuid())
  slug               String?              @default("")
  userId             String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  description        String?
  title              String
  AnonymousUserAnwer AnonymousUserAnwer[]
  pollCards          PollCard[]
  user               User                 @relation(fields: [userId], references: [id])

  @@map("polls")
}

model PollCard {
  id          Int                  @id @unique @default(autoincrement())
  index       Int                  @default(autoincrement())
  pollId      String               @default("")
  question    String
  optionsType String
  required    Boolean?
  options     String[]
  userAnswers AnonymousUserAnwer[]
  poll        Poll                 @relation(fields: [pollId], references: [id])

  @@map("pollcards")
}

model AnonymousUserAnwer {
  id          String   @id @unique @default(cuid())
  pollCardId  Int
  userAnswer  String[]
  pollId      String
  userSession String?  @default("")
  pollCard    PollCard @relation(fields: [pollCardId], references: [id])
  poll        Poll     @relation(fields: [pollId], references: [id])
}
